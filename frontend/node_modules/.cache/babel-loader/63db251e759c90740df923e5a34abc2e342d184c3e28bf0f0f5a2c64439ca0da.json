{"ast":null,"code":"var _jsxFileName = \"/home/joralgra/00_Projects/C2LoadSim/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, AppBar, Toolbar, Alert, Snackbar } from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { simulatorAPI } from './api/simulatorAPI';\nimport SimulatorDashboard from './components/SimulatorDashboard';\n\n// Create a dark theme\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#90caf9'\n    },\n    secondary: {\n      main: '#f48fb1'\n    }\n  }\n});\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionError, setConnectionError] = useState(null);\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        await simulatorAPI.healthCheck();\n        setIsConnected(true);\n        setConnectionError(null);\n      } catch (error) {\n        setIsConnected(false);\n        setConnectionError('Failed to connect to simulator backend');\n        console.error('Connection error:', error);\n      }\n    };\n\n    // Check connection on mount\n    checkConnection();\n\n    // Check connection periodically\n    const interval = setInterval(checkConnection, 30000); // Every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"C2LoadSim - Computation Load Simulator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), isConnected ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            variant: \"outlined\",\n            sx: {\n              border: 'none',\n              color: 'white'\n            },\n            children: \"Connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            variant: \"outlined\",\n            sx: {\n              border: 'none',\n              color: 'white'\n            },\n            children: \"Disconnected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        sx: {\n          mt: 3\n        },\n        children: isConnected ? /*#__PURE__*/_jsxDEV(SimulatorDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mt: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: \"Cannot connect to simulator backend. Please ensure the API server is running on port 5000.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !!connectionError,\n        autoHideDuration: 6000,\n        onClose: () => setConnectionError(null),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: () => setConnectionError(null),\n          severity: \"error\",\n          children: connectionError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D6xYfN4vErqVKoBM7rkK+7vZd2k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","AppBar","Toolbar","Alert","Snackbar","ThemeProvider","createTheme","CssBaseline","simulatorAPI","SimulatorDashboard","jsxDEV","_jsxDEV","theme","palette","mode","primary","main","secondary","App","_s","isConnected","setIsConnected","connectionError","setConnectionError","checkConnection","healthCheck","error","console","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","position","variant","component","severity","border","color","maxWidth","mt","display","justifyContent","open","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["/home/joralgra/00_Projects/C2LoadSim/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  AppBar,\n  Toolbar,\n  Alert,\n  Snackbar,\n} from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { simulatorAPI } from './api/simulatorAPI';\nimport SimulatorDashboard from './components/SimulatorDashboard';\n\n// Create a dark theme\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#90caf9',\n    },\n    secondary: {\n      main: '#f48fb1',\n    },\n  },\n});\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionError, setConnectionError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        await simulatorAPI.healthCheck();\n        setIsConnected(true);\n        setConnectionError(null);\n      } catch (error) {\n        setIsConnected(false);\n        setConnectionError('Failed to connect to simulator backend');\n        console.error('Connection error:', error);\n      }\n    };\n\n    // Check connection on mount\n    checkConnection();\n\n    // Check connection periodically\n    const interval = setInterval(checkConnection, 30000); // Every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              C2LoadSim - Computation Load Simulator\n            </Typography>\n            {isConnected ? (\n              <Alert severity=\"success\" variant=\"outlined\" sx={{ border: 'none', color: 'white' }}>\n                Connected\n              </Alert>\n            ) : (\n              <Alert severity=\"error\" variant=\"outlined\" sx={{ border: 'none', color: 'white' }}>\n                Disconnected\n              </Alert>\n            )}\n          </Toolbar>\n        </AppBar>\n        \n        <Container maxWidth=\"xl\" sx={{ mt: 3 }}>\n          {isConnected ? (\n            <SimulatorDashboard />\n          ) : (\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 10 }}>\n              <Alert severity=\"error\">\n                Cannot connect to simulator backend. Please ensure the API server is running on port 5000.\n              </Alert>\n            </Box>\n          )}\n        </Container>\n\n        <Snackbar \n          open={!!connectionError} \n          autoHideDuration={6000} \n          onClose={() => setConnectionError(null)}\n        >\n          <Alert onClose={() => setConnectionError(null)} severity=\"error\">\n            {connectionError}\n          </Alert>\n        </Snackbar>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}