{"ast":null,"code":"var _jsxFileName = \"/home/joralgra/00_Projects/C2LoadSim/frontend/src/components/SimulatorDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, Button, Card, CardContent, LinearProgress, Chip, Stack, Divider } from '@mui/material';\nimport { PlayArrow, Stop, Refresh, WorkOutline, Queue, Wifi, WifiOff } from '@mui/icons-material';\nimport { simulatorAPI } from '../api/simulatorAPI';\nimport { useWebSocket } from '../contexts/WebSocketProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulatorDashboard = () => {\n  _s();\n  const {\n    isConnected: wsConnected,\n    latestData,\n    connectionError: wsError\n  } = useWebSocket();\n  const [state, setState] = useState({\n    simulationStatus: {\n      running: false,\n      paused: false,\n      simulation_time: 0,\n      total_jobs_created: 0,\n      queue_length: 0,\n      active_workers: 0\n    },\n    queueStats: null,\n    workerStats: [],\n    loading: false,\n    error: null\n  });\n  const [stepControl, setStepControl] = useState({\n    stepTime: 1,\n    stepUnit: 'minutes'\n  });\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  // Update state when WebSocket data arrives\n  useEffect(() => {\n    if (latestData) {\n      setState(prev => ({\n        ...prev,\n        simulationStatus: latestData.status,\n        queueStats: latestData.queue_stats,\n        workerStats: latestData.worker_stats,\n        error: null\n      }));\n      setLastUpdate(latestData.timestamp);\n    }\n  }, [latestData]);\n\n  // Handle WebSocket errors\n  useEffect(() => {\n    if (wsError) {\n      setState(prev => ({\n        ...prev,\n        error: wsError\n      }));\n    }\n  }, [wsError]);\n\n  // Fallback: Fetch data manually if WebSocket is not connected\n  const fetchData = async () => {\n    if (wsConnected) return; // Don't fetch if WebSocket is working\n\n    try {\n      const [status, queueStats, workerData] = await Promise.all([simulatorAPI.getSimulationStatus(), simulatorAPI.getQueueStats(), simulatorAPI.getWorkerStats()]);\n      setState(prev => ({\n        ...prev,\n        simulationStatus: status,\n        queueStats,\n        workerStats: workerData.workers,\n        error: null\n      }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Failed to fetch data'\n      }));\n    }\n  };\n  useEffect(() => {\n    // Only set up polling if WebSocket is not connected\n    if (!wsConnected) {\n      fetchData(); // Initial fetch\n      const interval = setInterval(fetchData, 5000); // Poll every 5 seconds as fallback\n      return () => clearInterval(interval);\n    }\n  }, [wsConnected]);\n  const handleStartSimulation = async () => {\n    setState(prev => ({\n      ...prev,\n      loading: true\n    }));\n    try {\n      // Basic simulation configuration\n      const config = {\n        scenario: {\n          name: \"Default Simulation\",\n          description: \"Basic workload simulation\",\n          duration: 300,\n          // 5 minutes\n          num_workers: 4,\n          worker_config: {\n            processing_speed: 1.0,\n            failure_rate: 0.01,\n            efficiency_variance: 0.1,\n            max_concurrent_jobs: 1\n          },\n          job_generation: {\n            job_size: {\n              distribution: \"lognormal\",\n              params: {\n                mean_log: 0.0,\n                std_log: 0.5\n              }\n            },\n            job_duration: {\n              distribution: \"gamma\",\n              params: {\n                alpha: 2.0,\n                beta: 1.0\n              }\n            },\n            inter_arrival_time: {\n              distribution: \"exponential\",\n              params: {\n                lambda: 1.0\n              }\n            },\n            job_types: {\n              milp: 0.3,\n              heuristic: 0.4,\n              ml: 0.2,\n              mixed: 0.1\n            }\n          }\n        }\n      };\n      await simulatorAPI.startSimulation(config);\n      fetchData(); // Immediately update data\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Failed to start simulation'\n      }));\n    } finally {\n      setState(prev => ({\n        ...prev,\n        loading: false\n      }));\n    }\n  };\n  const handleStopSimulation = async () => {\n    setState(prev => ({\n      ...prev,\n      loading: true\n    }));\n    try {\n      await simulatorAPI.stopSimulation();\n      fetchData(); // Immediately update data\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Failed to stop simulation'\n      }));\n    } finally {\n      setState(prev => ({\n        ...prev,\n        loading: false\n      }));\n    }\n  };\n  const handleResetSimulation = async () => {\n    setState(prev => ({\n      ...prev,\n      loading: true\n    }));\n    try {\n      await simulatorAPI.resetSimulation();\n      fetchData(); // Immediately update data\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Failed to reset simulation'\n      }));\n    } finally {\n      setState(prev => ({\n        ...prev,\n        loading: false\n      }));\n    }\n  };\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${remainingSeconds}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${remainingSeconds}s`;\n    } else {\n      return `${remainingSeconds}s`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Simulation Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 24\n          }, this),\n          onClick: handleStartSimulation,\n          disabled: state.loading || state.simulationStatus.running,\n          children: \"Start Simulation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          startIcon: /*#__PURE__*/_jsxDEV(Stop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 24\n          }, this),\n          onClick: handleStopSimulation,\n          disabled: state.loading || !state.simulationStatus.running,\n          children: \"Stop Simulation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 24\n          }, this),\n          onClick: handleResetSimulation,\n          disabled: state.loading || state.simulationStatus.running,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: state.simulationStatus.running ? 'Running' : 'Stopped',\n          color: state.simulationStatus.running ? 'success' : 'default',\n          icon: state.simulationStatus.running ? /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(Stop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: wsConnected ? 'Live Updates' : 'Polling Mode',\n          color: wsConnected ? 'success' : 'warning',\n          icon: wsConnected ? /*#__PURE__*/_jsxDEV(Wifi, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(WifiOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 44\n          }, this),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), lastUpdate && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"textSecondary\",\n          children: [\"Last update: \", new Date(lastUpdate * 1000).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), state.loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          flex: '1 1 250px',\n          minWidth: 250\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: \"Simulation Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: formatTime(state.simulationStatus.simulation_time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          flex: '1 1 250px',\n          minWidth: 250\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: \"Jobs Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: state.simulationStatus.total_jobs_created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          flex: '1 1 250px',\n          minWidth: 250\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: \"Queue Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: state.simulationStatus.queue_length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          flex: '1 1 250px',\n          minWidth: 250\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: \"Active Workers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [state.simulationStatus.active_workers, \" / \", state.workerStats.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          flex: '1 1 400px',\n          minWidth: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(Queue, {\n            sx: {\n              mr: 1,\n              verticalAlign: 'middle'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), \"Queue Statistics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), state.queueStats ? /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Queue Utilization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: state.queueStats.queue_utilization * 100,\n              sx: {\n                mt: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: [Math.round(state.queueStats.queue_utilization * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: state.queueStats.completed_jobs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Failed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: state.queueStats.failed_jobs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Success Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [Math.round(state.queueStats.success_rate * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: \"No queue data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          flex: '1 1 400px',\n          minWidth: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(WorkOutline, {\n            sx: {\n              mr: 1,\n              verticalAlign: 'middle'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), \"Worker Statistics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), state.workerStats.length > 0 ? /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: state.workerStats.map((worker, index) => /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Worker \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: worker.status,\n                size: \"small\",\n                color: worker.status === 'busy' ? 'primary' : 'default'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: worker.utilization * 100,\n              sx: {\n                mt: 0.5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              justifyContent: \"space-between\",\n              sx: {\n                mt: 0.5\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: [\"Utilization: \", Math.round(worker.utilization * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: [\"Completed: \", worker.completed_jobs]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this)]\n          }, worker.worker_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: \"No worker data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), state.error && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mt: 3,\n        backgroundColor: 'error.dark'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: [\"Error: \", state.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulatorDashboard, \"Wi10hRyAEImOhdscXL+vQexxQPM=\", false, function () {\n  return [useWebSocket];\n});\n_c = SimulatorDashboard;\nexport default SimulatorDashboard;\nvar _c;\n$RefreshReg$(_c, \"SimulatorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Button","Card","CardContent","LinearProgress","Chip","Stack","Divider","PlayArrow","Stop","Refresh","WorkOutline","Queue","Wifi","WifiOff","simulatorAPI","useWebSocket","jsxDEV","_jsxDEV","SimulatorDashboard","_s","isConnected","wsConnected","latestData","connectionError","wsError","state","setState","simulationStatus","running","paused","simulation_time","total_jobs_created","queue_length","active_workers","queueStats","workerStats","loading","error","stepControl","setStepControl","stepTime","stepUnit","lastUpdate","setLastUpdate","prev","status","queue_stats","worker_stats","timestamp","fetchData","workerData","Promise","all","getSimulationStatus","getQueueStats","getWorkerStats","workers","Error","message","interval","setInterval","clearInterval","handleStartSimulation","config","scenario","name","description","duration","num_workers","worker_config","processing_speed","failure_rate","efficiency_variance","max_concurrent_jobs","job_generation","job_size","distribution","params","mean_log","std_log","job_duration","alpha","beta","inter_arrival_time","lambda","job_types","milp","heuristic","ml","mixed","startSimulation","handleStopSimulation","stopSimulation","handleResetSimulation","resetSimulation","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","children","sx","p","mb","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","alignItems","flexWrap","color","startIcon","onClick","disabled","orientation","flexItem","label","icon","size","Date","toLocaleTimeString","mt","display","gap","flex","minWidth","length","mr","verticalAlign","value","queue_utilization","round","justifyContent","completed_jobs","failed_jobs","success_rate","map","worker","index","utilization","worker_id","backgroundColor","_c","$RefreshReg$"],"sources":["/home/joralgra/00_Projects/C2LoadSim/frontend/src/components/SimulatorDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  LinearProgress,\n  Chip,\n  Stack,\n  Divider,\n  Alert,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  ButtonGroup,\n} from '@mui/material';\nimport {\n  PlayArrow,\n  Stop,\n  Refresh,\n  Assessment,\n  WorkOutline,\n  Queue,\n  Wifi,\n  WifiOff,\n  Pause,\n  PlayCircleOutline,\n  SkipNext,\n  FastForward,\n} from '@mui/icons-material';\n\nimport {\n  simulatorAPI,\n  SimulationStatus,\n  QueueStats,\n  WorkerStats,\n} from '../api/simulatorAPI';\n\nimport { useWebSocket } from '../contexts/WebSocketProvider';\n\ninterface DashboardState {\n  simulationStatus: SimulationStatus & { paused?: boolean };\n  queueStats: QueueStats | null;\n  workerStats: WorkerStats[];\n  loading: boolean;\n  error: string | null;\n}\n\ninterface StepControlState {\n  stepTime: number;\n  stepUnit: string;\n}\n\nconst SimulatorDashboard: React.FC = () => {\n  const { isConnected: wsConnected, latestData, connectionError: wsError } = useWebSocket();\n  \n  const [state, setState] = useState<DashboardState>({\n    simulationStatus: {\n      running: false,\n      paused: false,\n      simulation_time: 0,\n      total_jobs_created: 0,\n      queue_length: 0,\n      active_workers: 0,\n    },\n    queueStats: null,\n    workerStats: [],\n    loading: false,\n    error: null,\n  });\n\n  const [stepControl, setStepControl] = useState<StepControlState>({\n    stepTime: 1,\n    stepUnit: 'minutes'\n  });\n\n  const [lastUpdate, setLastUpdate] = useState<number | null>(null);\n\n  // Update state when WebSocket data arrives\n  useEffect(() => {\n    if (latestData) {\n      setState(prev => ({\n        ...prev,\n        simulationStatus: latestData.status,\n        queueStats: latestData.queue_stats,\n        workerStats: latestData.worker_stats,\n        error: null,\n      }));\n      setLastUpdate(latestData.timestamp);\n    }\n  }, [latestData]);\n\n  // Handle WebSocket errors\n  useEffect(() => {\n    if (wsError) {\n      setState(prev => ({\n        ...prev,\n        error: wsError,\n      }));\n    }\n  }, [wsError]);\n\n  // Fallback: Fetch data manually if WebSocket is not connected\n  const fetchData = async () => {\n    if (wsConnected) return; // Don't fetch if WebSocket is working\n    \n    try {\n      const [status, queueStats, workerData] = await Promise.all([\n        simulatorAPI.getSimulationStatus(),\n        simulatorAPI.getQueueStats(),\n        simulatorAPI.getWorkerStats(),\n      ]);\n\n      setState(prev => ({\n        ...prev,\n        simulationStatus: status,\n        queueStats,\n        workerStats: workerData.workers,\n        error: null,\n      }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Failed to fetch data',\n      }));\n    }\n  };\n\n  useEffect(() => {\n    // Only set up polling if WebSocket is not connected\n    if (!wsConnected) {\n      fetchData(); // Initial fetch\n      const interval = setInterval(fetchData, 5000); // Poll every 5 seconds as fallback\n      return () => clearInterval(interval);\n    }\n  }, [wsConnected]);\n\n  const handleStartSimulation = async () => {\n    setState(prev => ({ ...prev, loading: true }));\n    \n    try {\n      // Basic simulation configuration\n      const config = {\n        scenario: {\n          name: \"Default Simulation\",\n          description: \"Basic workload simulation\",\n          duration: 300, // 5 minutes\n          num_workers: 4,\n          worker_config: {\n            processing_speed: 1.0,\n            failure_rate: 0.01,\n            efficiency_variance: 0.1,\n            max_concurrent_jobs: 1,\n          },\n          job_generation: {\n            job_size: {\n              distribution: \"lognormal\",\n              params: { mean_log: 0.0, std_log: 0.5 }\n            },\n            job_duration: {\n              distribution: \"gamma\",\n              params: { alpha: 2.0, beta: 1.0 }\n            },\n            inter_arrival_time: {\n              distribution: \"exponential\",\n              params: { lambda: 1.0 }\n            },\n            job_types: {\n              milp: 0.3,\n              heuristic: 0.4,\n              ml: 0.2,\n              mixed: 0.1\n            }\n          }\n        }\n      };\n\n      await simulatorAPI.startSimulation(config);\n      fetchData(); // Immediately update data\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Failed to start simulation',\n      }));\n    } finally {\n      setState(prev => ({ ...prev, loading: false }));\n    }\n  };\n\n  const handleStopSimulation = async () => {\n    setState(prev => ({ ...prev, loading: true }));\n    \n    try {\n      await simulatorAPI.stopSimulation();\n      fetchData(); // Immediately update data\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Failed to stop simulation',\n      }));\n    } finally {\n      setState(prev => ({ ...prev, loading: false }));\n    }\n  };\n\n  const handleResetSimulation = async () => {\n    setState(prev => ({ ...prev, loading: true }));\n    \n    try {\n      await simulatorAPI.resetSimulation();\n      fetchData(); // Immediately update data\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Failed to reset simulation',\n      }));\n    } finally {\n      setState(prev => ({ ...prev, loading: false }));\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    \n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${remainingSeconds}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${remainingSeconds}s`;\n    } else {\n      return `${remainingSeconds}s`;\n    }\n  };\n\n  return (\n    <Box>\n      {/* Control Panel */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Simulation Control\n        </Typography>\n        \n        <Stack direction=\"row\" spacing={2} alignItems=\"center\" flexWrap=\"wrap\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<PlayArrow />}\n            onClick={handleStartSimulation}\n            disabled={state.loading || state.simulationStatus.running}\n          >\n            Start Simulation\n          </Button>\n          \n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            startIcon={<Stop />}\n            onClick={handleStopSimulation}\n            disabled={state.loading || !state.simulationStatus.running}\n          >\n            Stop Simulation\n          </Button>\n          \n          <Button\n            variant=\"outlined\"\n            startIcon={<Refresh />}\n            onClick={handleResetSimulation}\n            disabled={state.loading || state.simulationStatus.running}\n          >\n            Reset\n          </Button>\n\n          <Divider orientation=\"vertical\" flexItem />\n          \n          <Chip\n            label={state.simulationStatus.running ? 'Running' : 'Stopped'}\n            color={state.simulationStatus.running ? 'success' : 'default'}\n            icon={state.simulationStatus.running ? <PlayArrow /> : <Stop />}\n          />\n\n          <Chip\n            label={wsConnected ? 'Live Updates' : 'Polling Mode'}\n            color={wsConnected ? 'success' : 'warning'}\n            icon={wsConnected ? <Wifi /> : <WifiOff />}\n            size=\"small\"\n          />\n\n          {lastUpdate && (\n            <Typography variant=\"caption\" color=\"textSecondary\">\n              Last update: {new Date(lastUpdate * 1000).toLocaleTimeString()}\n            </Typography>\n          )}\n        </Stack>\n\n        {state.loading && (\n          <Box sx={{ mt: 2 }}>\n            <LinearProgress />\n          </Box>\n        )}\n      </Paper>\n\n      {/* Status Overview Cards */}\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n        <Card sx={{ flex: '1 1 250px', minWidth: 250 }}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Simulation Time\n            </Typography>\n            <Typography variant=\"h6\">\n              {formatTime(state.simulationStatus.simulation_time)}\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Card sx={{ flex: '1 1 250px', minWidth: 250 }}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Jobs Created\n            </Typography>\n            <Typography variant=\"h6\">\n              {state.simulationStatus.total_jobs_created}\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Card sx={{ flex: '1 1 250px', minWidth: 250 }}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Queue Length\n            </Typography>\n            <Typography variant=\"h6\">\n              {state.simulationStatus.queue_length}\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Card sx={{ flex: '1 1 250px', minWidth: 250 }}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Active Workers\n            </Typography>\n            <Typography variant=\"h6\">\n              {state.simulationStatus.active_workers} / {state.workerStats.length}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n\n      {/* Detailed Statistics */}\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\n        {/* Queue Statistics */}\n        <Paper sx={{ p: 3, flex: '1 1 400px', minWidth: 400 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            <Queue sx={{ mr: 1, verticalAlign: 'middle' }} />\n            Queue Statistics\n          </Typography>\n          \n          {state.queueStats ? (\n            <Stack spacing={2}>\n              <Box>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Queue Utilization\n                </Typography>\n                <LinearProgress \n                  variant=\"determinate\" \n                  value={state.queueStats.queue_utilization * 100} \n                  sx={{ mt: 1 }}\n                />\n                <Typography variant=\"caption\">\n                  {Math.round(state.queueStats.queue_utilization * 100)}%\n                </Typography>\n              </Box>\n              \n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Box>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Completed</Typography>\n                  <Typography variant=\"h6\">{state.queueStats.completed_jobs}</Typography>\n                </Box>\n                <Box>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Failed</Typography>\n                  <Typography variant=\"h6\">{state.queueStats.failed_jobs}</Typography>\n                </Box>\n                <Box>\n                  <Typography variant=\"body2\" color=\"textSecondary\">Success Rate</Typography>\n                  <Typography variant=\"h6\">{Math.round(state.queueStats.success_rate * 100)}%</Typography>\n                </Box>\n              </Box>\n            </Stack>\n          ) : (\n            <Typography color=\"textSecondary\">No queue data available</Typography>\n          )}\n        </Paper>\n\n        {/* Worker Statistics */}\n        <Paper sx={{ p: 3, flex: '1 1 400px', minWidth: 400 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            <WorkOutline sx={{ mr: 1, verticalAlign: 'middle' }} />\n            Worker Statistics\n          </Typography>\n          \n          {state.workerStats.length > 0 ? (\n            <Stack spacing={2}>\n              {state.workerStats.map((worker, index) => (\n                <Box key={worker.worker_id}>\n                  <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                    <Typography variant=\"body2\">\n                      Worker {index + 1}\n                    </Typography>\n                    <Chip \n                      label={worker.status} \n                      size=\"small\"\n                      color={worker.status === 'busy' ? 'primary' : 'default'}\n                    />\n                  </Stack>\n                  <LinearProgress \n                    variant=\"determinate\" \n                    value={worker.utilization * 100} \n                    sx={{ mt: 0.5 }}\n                  />\n                  <Stack direction=\"row\" justifyContent=\"space-between\" sx={{ mt: 0.5 }}>\n                    <Typography variant=\"caption\">\n                      Utilization: {Math.round(worker.utilization * 100)}%\n                    </Typography>\n                    <Typography variant=\"caption\">\n                      Completed: {worker.completed_jobs}\n                    </Typography>\n                  </Stack>\n                </Box>\n              ))}\n            </Stack>\n          ) : (\n            <Typography color=\"textSecondary\">No worker data available</Typography>\n          )}\n        </Paper>\n      </Box>\n\n      {/* Error Display */}\n      {state.error && (\n        <Paper sx={{ p: 2, mt: 3, backgroundColor: 'error.dark' }}>\n          <Typography color=\"error\">\n            Error: {state.error}\n          </Typography>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default SimulatorDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}